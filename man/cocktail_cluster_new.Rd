% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cocktail_cluster_new.R
\name{cocktail_cluster_new}
\alias{cocktail_cluster_new}
\title{Cocktail clustering (sparse matrix)}
\usage{
cocktail_cluster_new(vegmatrix, progress = TRUE)
}
\arguments{
\item{vegmatrix}{A matrix or data frame with \strong{plots in rows} and \strong{species in columns}.}

\item{progress}{Logical; show a text progress bar (default \code{TRUE}).}
}
\value{
A list of class \code{"cocktail"} with:
\itemize{
\item \code{Cluster.species} — integer matrix (n_merges × n_species): species membership per merge.
\item \code{Cluster.merged}  — integer matrix (n_merges × 2): left/right children per merge
(negative = original species index; positive = earlier merge index).
\item \code{Cluster.height}  — numeric vector length n_merges: phi at each merge.
\item \code{Plot.cluster}    — integer matrix (n_plots × n_merges): plot membership per merge.
\item \code{species}         — character vector of species names kept after cleaning.
\item \code{plots}           — character vector of plot names.
}
}
\description{
This implementation:
\itemize{
\item \strong{Binarizes} the input: values > 0 become 1; values ≤ 0 or \code{NA} become 0.
\item \strong{Drops empty species} (all-zero columns) before clustering.
\item Computes the association coefficient (“phi”) each round from one sparse
crossproduct for speed and exactness.
\item Uses a \strong{fixed, reproducible tie order}: when several pairs share the same
maximum phi at a step, they are processed in the same order that R fills the
lower-triangular distance matrix (scan by increasing column, then row).
}
}
\details{
Fast Cocktail agglomeration for a \strong{plots × species} table.

Binarization and removal of empty species happen internally and only affect the
set of columns that contribute to clustering. All returned components are aligned
to the species that had at least one presence after cleaning.
}
\examples{
vm <- matrix(c(1,0,1,
               0,1,0,
               1,1,0),
             nrow = 3, byrow = TRUE,
             dimnames = list(paste0("plot", 1:3),
                             c("sp1","sp2","sp3")))
res <- cocktail_cluster_new(vm, progress = FALSE)
names(res)

}
\seealso{
\code{\link{plot_cocktail}}, \code{\link{cocktail_fuzzy}}, \code{\link{assign_releves}}
}
